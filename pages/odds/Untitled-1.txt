<template>
  <v-container class="grey lighten-5">
    <v-row>
      <v-col cols="12">
        <h3>Cristina Ar√©valo</h3>
        <p v-if="lostags">{{ lostags[0] }}</p>
        <v-btn @click="ordenaporpromedio()">Ordena por promedio</v-btn>
        <client-only>
      <component :is="apexchart" width="100%" type="bar" :options="chartOptions" :series="series" />
    </client-only>

    <pre>
{{ chartOptions.xaxis.categories}}

    </pre>
        
      </v-col>
      
    </v-row>
   
    
  </v-container>
</template>
<script>
import { mapGetters, mapState } from "vuex";
export default {
  data() {
    return {
      sort: false,
      series: [
        {
          name: "Tema",
          data: null
        },
        {
          name: "Promedio",
          data: null
        } /*,
        
        {
          name: "Free Cash Flow",
          data: [35, 41, 36, 26, 45, 48, 52, 53, 41]
        } */
      ],
      chartOptions: {
        plotOptions: {
          bar: {
            horizontal: false,
            columnWidth: "100%",
            endingShape: "rounded"
          }
        },
        dataLabels: {
          enabled: false
        },
        stroke: {
          show: true,
          width: 2,
          colors: ["transparent"]
        },

        xaxis: {
          categories: null
        },
        yaxis: {
          title: {
            /* text: "$ (thousands)" */
          }
        },
        fill: {
          opacity: 1
        }
        /*tooltip: {
          y: {
            formatter: function(val) {
              return "$ " + val + " thousands";
            }
          }
        }*/
      }
    };
  },
  computed: {
    apexchart() {
      return () => {
        if (process.client) {
          return import("vue-apexcharts");
        }
      };
    },
    ...mapState(["peliculas"]),
    ...mapGetters(["listaetiquetas", "datosbasicos"]),
    lostags() {
      if (this.sort === true) {
        return this.lodash.orderBy(this.listaetiquetas, ["promedio"], ["desc"]);
      } else {
        return this.lodash.orderBy(this.listaetiquetas, ["contador"], ["desc"]);
      }
    },
    datosgrafico() {
      let resultado = [];
      let salida = [];
      let tema = [];
      let prom = [];
      if (this.lostags) {
        let counter = 0;
        for (const etiq of this.lostags) {
          counter++;
          if (counter < 31) {
            salida.push(etiq.contador);
            prom.push(etiq.promedio.toFixed(0));
            tema.push(etiq.termino);
          }
        }
      }
      resultado[0] = salida;

      resultado[1] = prom;
      resultado[2] = tema;
      return resultado;
      //this.series[0].data = salida;
      //this.series[1].data = prom;
      //this.chartOptions.xaxis.categories = tema;
    }
  },
  watch: {
    datosgrafico: function(val) {
      this.series[0].data = val[0];
      this.series[1].data = val[1];
      //this.chartOptions.xaxis.categories = val[2];
      this.chartOptions = {
        ...this.chartOptions,
        ...{
          xaxis: {
            categories: val[2]
          }
        }
      };
    }
    /*tagas: function(val) {
      this.creadatosGrafico();
    }*/
  },
  methods: {
    ordenaporpromedio() {
      //alert("crisis Tina");
      //this.tagas = this.lodash.orderBy(this.tagas, ["promedio"], ["desc"]);
      this.sort = !this.sort;
    }
    /* creadatosGrafico() {
      let salida = [];
      let tema = [];
      let prom = [];
      if (this.lostags) {
        let counter = 0;
        for (const etiq of this.lostags) {
          counter++;
          if (counter < 21) {
            salida.push(etiq.contador);
            tema.push(etiq.termino);
            prom.push(etiq.promedio.toFixed(0));
          }
        }
      }
      this.series[0].data = salida;
      this.series[1].data = prom;
      this.chartOptions.xaxis.categories = tema;
    } */
  },
  mounted() {
    //this.creadatosGrafico();
    //this.datosgrafico;
    if (this.datosgrafico) {
      this.series[0].data = this.datosgrafico[0];
      this.series[1].data = this.datosgrafico[1];
      this.chartOptions.xaxis.categories = this.datosgrafico[2];
    }
  }
};
</script>